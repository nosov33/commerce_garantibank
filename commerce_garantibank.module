<?php
/**
* Implements hook_menu().
*/
function commerce_garantibank_menu() {
  $items['pay_by_card'] = array(
    'title' => 'Credit Card page',
    'page callback' => 'commerce_garantibank_custom',
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Page callback for 'pay_by_card' page with credit card fields
 */
function commerce_garantibank_custom() {
  return 'Hello world!';
}

/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_garantibank_commerce_payment_method_info() {
  $payment_methods = array();
  $payment_methods['commerce_garantibank'] = array(
    'base' => 'commerce_garantibank',
    'title' => t('Credit Card'),
    'short_title' => t('Credit Card'),
    'display_title' => t('Credit Card'),
    'description' => t('Integrates Credit Card Merchant'),
    'terminal' => FALSE,
    'offsite' => TRUE,
    'active' => TRUE,
  );
  return $payment_methods;
}

/**
 * Payment method callback; generation callback for the payment submission form.
 *
 */
function commerce_garantibank_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  $build = array();
  $text .= '<div class="desc">' . t('Use this payment method to pay by Credit Card by simple form.') . '</div>';
  $build['print_receipt'] = array('#markup' => $text);
  return $build;
}

/**
 * Payment method callback: redirect form.
 */
function commerce_garantibank_redirect_form($form, &$form_state, $order, $payment_method) {
  return commerce_garantibank_build_redirect_form($form, $form_state, $order, $payment_method['settings']);
}

/**
 * Payment method callback; generation callback for the payment redirect form.
 */
function commerce_garantibank_build_redirect_form($form, &$form_state, $order, $settings) {
  // Choose a server to redirect.
  $form['#action'] =  $GLOBALS['base_url'] . "/pay_by_card"; // Here should be page_adress which we made before
  $wrapper = entity_metadata_wrapper('commerce_order', $order);
  $currency_code = $wrapper->commerce_order_total->currency_code->value();
  $amount = $wrapper->commerce_order_total->amount->value();
  // Get real price.
  $amount = commerce_currency_amount_to_decimal($amount, $currency_code);
  $form["OutSum"] = array('#type' => 'hidden', '#value' => $amount);
  $form["InvId"] = array('#type' => 'hidden', '#value' => $order->order_id);
  // Calculate signature.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Pay via credit card'),
  );
  return $form;
}

?>