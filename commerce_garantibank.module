<?php
/**
* Implements hook_help() to the module.
* 
*/
function commerce_garantibank_help($path, $arg){
	switch ($path){
		case 'admin/help#garanti_bank':{
			$ret_val = '<h3>' . t('About Credit Card Garanti Bank Merchant') . '</h3>';
			$ret_val = '<p>' . t('Here is discription of the Module which You can Translate') . '</p>';
			return $ret_val;
			break;
		}
	}
}
/**
* Implements hook_menu().
*/
function commerce_garantibank_menu() {
  $items['pay_by_card'] = array(
    'title' => 'Credit Card page',
    'page callback' => 'commerce_garantibank_custom',
    'access arguments' => array('access content'),
  );
  return $items;
}
/**
 * Page callback for 'pay_by_card' page with credit card fields
 */
function commerce_garantibank_custom() {
/* Take user's ip  */
	if (!empty($_SERVER['HTTP_CLIENT_IP'])) {
    	$ip = $_SERVER['HTTP_CLIENT_IP'];
		} elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {
    	$ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
		} else {
    	$ip = $_SERVER['REMOTE_ADDR'];
	}   
/* Test or Active Mode */
        $strMode = "PROD";
        $strVersion = "v0.01";
/* Terminal ID */
        $strTerminalID = "1****472";
        $strTerminalID_ = "01****472"; 
        $strProvUserID = "PROVAUT";
/* Password */
        $strProvisionPassword = "A***7"; 
/* User ID */
        $strUserID = "H*****J";
/* Merchant ID */
        $strMerchantID = "0*****3"; 
        $strIPAddress = $ip;   
        $strEmailAddress = "eticaret@garanti.com.tr";
/* Date in any format as PHP_DATE */
        $strOrderID = date("d_m_Y_H_i");
        $strInstallmentCnt = ""; 
        $strNumber = $_POST['cardnumber'];
        $strExpireDate = $_POST['cardexpiredatemonth'].$_POST['cardexpiredateyear'];
        $strCVV2 = $_POST['cardcvv2'];
        $toplamfiyat = $_POST['OutSum'];
        $strAmount = $toplamfiyat * 100; 
        $strType = "sales";
/* 949 is Turkish Lira (TL) code */
        $strCurrencyCode = "949";
        $strCardholderPresentCode = "0";
        $strMotoInd = "N";
        $strHostAddress = "https://sanalposprov.garanti.com.tr/VPServlet";
        $SecurityData = strtoupper(sha1($strProvisionPassword.$strTerminalID_));
        $HashData = strtoupper(sha1($strOrderID.$strTerminalID.$strNumber.$strAmount.$SecurityData));
        $xml= "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
        <GVPSRequest>
        <Mode>$strMode</Mode><Version>$strVersion</Version>
        <Terminal><ProvUserID>$strProvUserID</ProvUserID><HashData>$HashData</HashData><UserID>$strUserID</UserID><ID>$strTerminalID</ID><MerchantID>$strMerchantID</MerchantID></Terminal>
        <Customer><IPAddress>$strIPAddress</IPAddress><EmailAddress>$strEmailAddress</EmailAddress></Customer>
        <Card><Number>$strNumber</Number><ExpireDate>$strExpireDate</ExpireDate><CVV2>$strCVV2</CVV2></Card>
        <Order><OrderID>$strOrderID</OrderID><GroupID></GroupID><AddressList><Address><Type>S</Type><Name></Name><LastName></LastName><Company></Company><Text></Text><District></District><City></City><PostalCode></PostalCode><Country></Country><PhoneNumber></PhoneNumber></Address></AddressList></Order><Transaction><Type>$strType</Type><InstallmentCnt>$strInstallmentCnt</InstallmentCnt><Amount>$strAmount</Amount><CurrencyCode>$strCurrencyCode</CurrencyCode><CardholderPresentCode>$strCardholderPresentCode</CardholderPresentCode><MotoInd>$strMotoInd</MotoInd><Description></Description><OriginalRetrefNum></OriginalRetrefNum></Transaction>
        </GVPSRequest>";
        If ($_POST['IsFormSubmitted'] == ""){
        }
        else {
        $ch=curl_init();
        curl_setopt($ch, CURLOPT_URL, $strHostAddress);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1) ;
        curl_setopt($ch, CURLOPT_POSTFIELDS, "data=".$xml);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
        $results = curl_exec($ch);
        curl_close($ch);
        $xml_parser = xml_parser_create();
        xml_parse_into_struct($xml_parser,$results,$vals,$index);
        xml_parser_free($xml_parser);
        
        $strReasonCodeValue = $vals[$index['REASONCODE'][0]]['value'];
        if($strReasonCodeValue == "00")
        { 	/* If money has been sent - show the message and send email to administrator */
            echo "<div class='mistake'><div class='container'>Thank You! Money has been sent!</div></div>";
            $message = "Name: " . $_POST['rec_name'] . "\n Phone: " . $_POST['rec_phone'] . "\n Email: " . $_POST['rec_email'] . "\n Date: " . $_POST['day'] . "." . $_POST['month'] . "." . $_POST['year'] . "\n Delivery Time: " . $_POST['delivery_time'] . "\n Adress: " . $_POST['field_adress'] . "\n Type: " . $_POST['field_type'] . "\n Cart Message: " . $_POST['field_cart_message'] . "\n Sender Phone: " . $_POST['field_sender_telefon'] . "\n Amount: " . $toplamfiyat;
        $headers  = "Content-type: text/html; charset=windows-1251 \r\n"; 
		mail("info@turkeyflora.ru", "Yeni payment", $message, $headers); 
        } else {
        	/* If error - show the message */
            echo "<div class='mistake'><div class='container'>Error! Please, contact with info@turkeyflora.ru</div></div>"; 
        }
        }
	$page_body = "<form action='?' method='post' class='payment'><div class='tot_al'>";
	$page_body .= t('Total Price in TL') . ": " . $toplamfiyat . "</div>";
	$page_body .= t('Card Number') . ": <input name='cardnumber' type='text' />";
	$page_body .= t('Expire Date (month)') . "<select name='cardexpiredatemonth'><option value='01'>01</option><option value='02'>02</option><option value='03'>03</option><option value='04'>04</option><option value='05'>05</option><option value='06'>06</option><option value='07'>07</option><option value='08'>08</option><option value='09'>09</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option></select>";
	$page_body .= t('Expire Date (year)') . "<select name='cardexpiredateyear'><option value='15'>2015</option><option value='16'>2016</option><option value='17'>2017</option><option value='18'>2018</option><option value='19'>2019</option><option value='21'>2021</option><option value='22'>2022</option><option value='23'>2023</option><option value='24'>2024</option><option value='25'>2025</option><option value='26'>2026</option><option value='27'>2027</option><option value='28'>2028</option><option value='29'>2029</option></select>";
	$page_body .= "CVV2: <input name='cardcvv2' type='text' /><br />";
	$page_body .= "<input type='hidden' name='IsFormSubmitted' value='submitted' /><input id='submit' type='submit' value='Submit'/></form>";
	return $page_body;
}
/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_garantibank_commerce_payment_method_info() {
  $payment_methods = array();
  $payment_methods['commerce_garantibank'] = array(
    'base' => 'commerce_garantibank',
    'title' => t('Credit Card Garanti Bank'),
    'short_title' => t('Credit Card'),
    'display_title' => t('Credit Card Garanti Bank'),
    'description' => t('Integrates Credit Card Garanti Bank Merchant'),
    'terminal' => FALSE,
    'offsite' => TRUE,
    'active' => TRUE,
  );
  return $payment_methods;
}
/**
 * Payment method callback; generation callback for the payment submission form.
 *
 */
function commerce_garantibank_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  $build = array();
  /* discription o–∞ paymen method*/
  $text .= '<div class="desc">' . t('Use this payment method to pay by Credit Card by simple form.') . '</div>';
  $build['print_receipt'] = array('#markup' => $text);
  return $build;
}
/**
 * Payment method callback: redirect form.
 */
function commerce_garantibank_redirect_form($form, &$form_state, $order, $payment_method) {
  return commerce_garantibank_build_redirect_form($form, $form_state, $order, $payment_method['settings']);
}
/**
 * Payment method callback; generation callback for the payment redirect form.
 */
function commerce_garantibank_build_redirect_form($form, &$form_state, $order, $settings) {
  // Choose a server to redirect.
  $form['#action'] =  $GLOBALS['base_url'] . "/pay_by_card"; // Here should be page_adress which we made before
  $wrapper = entity_metadata_wrapper('commerce_order', $order);
  $currency_code = $wrapper->commerce_order_total->currency_code->value();
  $amount = $wrapper->commerce_order_total->amount->value();
  // Get real price.
  $amount = commerce_currency_amount_to_decimal($amount, $currency_code);
  $form["OutSum"] = array('#type' => 'hidden', '#value' => $amount);
  $form["InvId"] = array('#type' => 'hidden', '#value' => $order->order_id);
  // Calculate signature.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Pay via credit card'),
  );
  return $form;
}